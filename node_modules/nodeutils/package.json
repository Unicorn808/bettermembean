{
  "_args": [
    [
      {
        "raw": "nodeutils@git+https://github.com/fpercival/nodeutils.git",
        "scope": null,
        "escapedName": "nodeutils",
        "name": "nodeutils",
        "rawSpec": "git+https://github.com/fpercival/nodeutils.git",
        "spec": "git+https://github.com/fpercival/nodeutils.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:fpercival/nodeutils.git",
          "sshUrl": "git+ssh://git@github.com/fpercival/nodeutils.git",
          "httpsUrl": "git+https://github.com/fpercival/nodeutils.git",
          "gitUrl": "git://github.com/fpercival/nodeutils.git",
          "shortcut": "github:fpercival/nodeutils",
          "directUrl": "https://raw.githubusercontent.com/fpercival/nodeutils/master/package.json"
        }
      },
      "C:\\Users\\hocke\\Dropbox\\WebstormProjects\\BetterMembean\\node_modules\\expressd"
    ]
  ],
  "_from": "git+https://github.com/fpercival/nodeutils.git",
  "_id": "nodeutils@0.2.0",
  "_inCache": true,
  "_location": "/nodeutils",
  "_phantomChildren": {},
  "_requested": {
    "raw": "nodeutils@git+https://github.com/fpercival/nodeutils.git",
    "scope": null,
    "escapedName": "nodeutils",
    "name": "nodeutils",
    "rawSpec": "git+https://github.com/fpercival/nodeutils.git",
    "spec": "git+https://github.com/fpercival/nodeutils.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:fpercival/nodeutils.git",
      "sshUrl": "git+ssh://git@github.com/fpercival/nodeutils.git",
      "httpsUrl": "git+https://github.com/fpercival/nodeutils.git",
      "gitUrl": "git://github.com/fpercival/nodeutils.git",
      "shortcut": "github:fpercival/nodeutils",
      "directUrl": "https://raw.githubusercontent.com/fpercival/nodeutils/master/package.json"
    }
  },
  "_requiredBy": [
    "/expressd",
    "/json_config"
  ],
  "_resolved": "git+https://github.com/fpercival/nodeutils.git#45ad06dcfdec7cb4c0b9d1d9a7d0a7f5d46a554b",
  "_shasum": "591fb08402322b6ca9827ac1102320f06cb7c290",
  "_shrinkwrap": null,
  "_spec": "nodeutils@git+https://github.com/fpercival/nodeutils.git",
  "_where": "C:\\Users\\hocke\\Dropbox\\WebstormProjects\\BetterMembean\\node_modules\\expressd",
  "author": {
    "name": "F. Percival"
  },
  "bugs": {
    "url": "https://github.com/fpercival/nodeutils/issues"
  },
  "dependencies": {},
  "description": "node helpers",
  "devDependencies": {
    "mocha": "^3.3.0"
  },
  "directories": {
    "test": "test"
  },
  "files": [
    "index.js",
    "lib",
    "LICENSE",
    "README.de"
  ],
  "gitHead": "45ad06dcfdec7cb4c0b9d1d9a7d0a7f5d46a554b",
  "homepage": "https://github.com/fpercival/nodeutils#readme",
  "keywords": [
    "nodeja",
    "utilities"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "nodeutils",
  "optionalDependencies": {},
  "readme": "# nodeutils\r\nMy node helpers\r\n\r\n## Install\r\n\r\n    npm i --save https://github.com/fpercival/nodeutils.git\r\n\r\n## Usage\r\n\r\n### extend\r\nExtend object from other objects\r\n\r\n    let extend = require('nodeutils').extend;\r\n\r\n    let dest = {x:4, y:20};\r\n    extend(dest, {z:20}, {y:5});\r\n\r\n    assert.equal(dest.y, 5);\r\n    assert.equal(dest.z, 20);\r\n\r\n\r\n### nextr\r\nEnsures functions are called synchronously.\r\n\r\nSignature: nextr( items, eachFunc, doneFunc )\r\n\r\n-items: Array of items to be processed\r\n\r\n-eachFunc: function called for each item. Function is passed the current item and a function to call when processing is complete. If the 'next' function is passed 'true', the processing is cancelled and doneFunc is called if provided.\r\n\r\n-doneFunc: (optional) function called after all items have been processed.\r\n\r\n\r\n\r\n\r\n    let nextr = require('nodeutils').nextr;\r\n\r\n    const arr = [1, 2, 5, 4];\r\n    let res = '';\r\n    nextr(\r\n        arr,\r\n        function(item, next){\r\n            setTimeout( function(){\r\n                res = res + item;\r\n                console.log(res);\r\n                next();\r\n            }, 100);\r\n        },\r\n        function(){\r\n            console.log('result: '+res);\r\n        },\r\n    );\r\n    // Prints\r\n    // '1'\r\n    // '12'\r\n    // '125'\r\n    // '1254'\r\n    // 'result: 1254'\r\n\r\n### log\r\nA scoped logger that can filtered globally or within each scope.\r\n\r\n#### Global logger\r\n\r\nThe global logger emits events for messages based on level.\r\n\r\n    let logger = require('nodeutils').log;\r\n\r\n    function toConsole(){ console.log.apply(console, arguments); };\r\n\r\n    logger.on('debug', toConsole );\r\n    logger.on('warn', toConsole );\r\n    logger.on('info', toConsole );\r\n    logger.on('error', toConsole );\r\n\r\n#### Scoped logger\r\n\r\n    let log1 = logger.create('log:scope1');\r\n    log1.debug('debug info');\r\n    log1.warn('Watch out !!');\r\n    log1.info('FYI');\r\n    log1.error('Something went wrong', new Error('oops') );\r\n\r\n#### Set logging level\r\n\r\nLog level can be set globally or seperately per scope. Default level is 'debug'\r\n\r\n    logger.setLevel('debug');  // emits debug, warn, info & error\r\n    logger.setLevel('warn');  // emits warn, info & error\r\n    logger.setLevel('info');  // emits info & error\r\n    logger.setLevel('error');  // emits error\r\n    logger.setLevel('none');  // emits no messages\r\n\r\n#### Filtering\r\n\r\nMessages can be filtered based on the scope name.\r\n\r\n    let log1 = logger.create('log:scope1');\r\n    let log2 = logger.create('log:scope2');\r\n\r\n    // Using a wildcard\r\n    logger.setFilter('log:*'); // Will emit messages from log1 & log2\r\n    logger.setFilter('*scope2'); // Will only emit messages from log2\r\n\r\n#### Accessing\r\n\r\nScope loggers can be accessed from the global logger by name.\r\n\r\n     logger.get( 'log:scope1' ,\r\n        scopeLogger => {\r\n            acopeLogger.setFilter('*');\r\n        }\r\n     );\r\n\r\n or using a regular expression\r\n\r\n     logger.get( /log.*/i ,\r\n        scopeLogger => {\r\n            acopeLogger.setFilter('*');\r\n        }\r\n     );\r\n\r\n\r\n\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/fpercival/nodeutils.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.2.0"
}
